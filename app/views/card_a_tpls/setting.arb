active_admin_form_for resource, :url=>setting_card_a_tpl_path(resource) do |f|
  f.semantic_errors(*f.object.errors.keys)

  f.inputs I18n.t(:detail) do
    # f.input :_from 
    f.input :total, :input_html=>{:disabled=>true, :value=>f.object.cards.size}
    f.input :remain, :input_html=>{:disabled=>true, :value=>f.object.cards.acquirable.size}
    f.input :change_remain, :hint=>'增加后者减少， 总库存不能少于1'
    if f.object.class.login.exists? f.object.id
      f.input :person_limit, :hint=>'如果为匿名券, 设置无用'
    else
      f.input :person_limit, :input_html=>{:value=>100}, :as=>:hidden, :hint=>'如果为匿名券, 设置无用'
    end
  end

  f.inputs '定时' do
    f.input :acquire_from, as: :date_time_picker, datepicker_options: { timepicker: false, format: 'Y-m-d', :value=>f.object.acquire_from.try(:strftime, "%F") }
    f.input :acquire_to, as: :date_time_picker, datepicker_options: { timepicker: false, format: 'Y-m-d', :value=>f.object.acquire_to.try(:strftime, "%F") }
    f.input :acquire_weeks, :collection=>CardTpl::UseWeeks, :as=>:check_boxes

    f.has_many :periods, heading: false, allow_destroy: true do |f2|
      f2.input :from,  as: :date_time_picker, datepicker_options: { datepicker: false, format: 'H:i', :value=>f2.object.from.try(:strftime, "%T") }
      f2.input :to, as: :date_time_picker, datepicker_options: { datepicker: false, format: 'H:i', :value=>f2.object.to.try(:strftime, "%T") }
      f2.input :number
      if f.object.class.login.exists? f.object.id
        f2.input :person_limit, :hint=>'如果为匿名券, 设置无用'
      else
        f2.input :person_limit, :input_html=>{:value=>100}, :as=>:hidden, :hint=>'如果为匿名券, 设置无用'
      end
      
    end
  end

  f.actions
end